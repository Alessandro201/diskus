language: rust
cache: cargo
matrix:
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    # Minimum Rust supported channel.
    - os: linux
      rust: 1.29.0
      env: TARGET=x86_64-unknown-linux-gnu


addons:
  apt:
    packages:
      # needed to build deb packages
      - fakeroot

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=diskus

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  # Incorporate TARGET env var to the build and test process
  - cargo build --target $TARGET --verbose
  #- cargo test --target $TARGET --verbose

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "kETHApaAh2te8U/hqUDAGJBI3R2oXTF0Zz+uL5tEzqvQCDVqmOm1ZQqZtZ8HvppO1p71bYraRh2WOBnjzu0vuhVdjDXtwOu3nw53n9XPeqaNNYu/FQs5HT6vhiPpwAdneL5lfAO0rl7eJpU/X145cjt8kn4pYDsKZ7vnxFR6RKSZfVdKhlq8MzU699Fetaf6t1X1dRL2unpYFNif16XkWzMlSQj+QW8tfdyocz8r/0snimCsVTox4K2bdRImQe4p7KkPZ2sWsG8+xDn3+6wWXZkOZBo58UNxFszAbQB8OaO1fa8Ajgkbs1UtSA7StdhXvzHcm7ulCyNabhyhNVKyY+n1yklzGYmiSxeqHm67ILES8MA0OjxjTc/XWh66gbZyqzKrOHbiNEJyf3cLLC+8G3Jh6CJui+PvTJbspjghNguapE3wyraXPiVOZ1y5XM6mtVw6OOoZbKLUUsQhDTAA6GMMNMzhCQ7t0lgQSrGuOFirSw3bfuJSvpS10D9alDsD+Y0G8CKSTpXmP3GyFa4D4a5GJJ2j9U4RfbeIzNl8/1vchgSFtDAZKzbhcvethquMSaHGVKj2Nbx165Phf8ep3J3uiDceGP28yXNd1uVrO0XATRfwN4McW8nd16Cdc2tRlQq0W0Y/Vo7D/yoiE/ONi4vSHXr+zcDhqsVzyQZ3quk="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""

notifications:
  email:
    on_success: never
